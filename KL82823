local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TeleportService = game:GetService("TeleportService")
local Lighting = game:GetService("Lighting")
local HttpService = game:GetService("HttpService")

local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

getgenv().AutoKillEnabled = true
local excludedNames = {
    ["Nii_OZ"] = true,
    ["VTBR_VoaPassarinho8"] = true,
}
local placeId = game.PlaceId
local MIN_PLAYERS = 12
local PRIORITY_PLAYERS = 17
local MAX_TIME_IN_SERVER = 45
local joinTime = tick()

local function getHand()
    local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    return char:FindFirstChild("RightHand") or char:FindFirstChild("Right Arm")
end

local function attackAllPlayers()
    local hand = getHand()
    if not hand or not hand:IsDescendantOf(workspace) then return end
    for _, target in pairs(Players:GetPlayers()) do
        if target ~= LocalPlayer and not excludedNames[target.DisplayName] and target.Character then
            local root = target.Character:FindFirstChild("HumanoidRootPart")
            if root and root:IsDescendantOf(workspace) then
                for _=1,2 do
                    firetouchinterest(hand, root, 0)
                    task.wait(0.01)
                    firetouchinterest(hand, root, 1)
                end
            end
        end
    end
end

local function autoEquipAndPunch()
    while true do
        task.wait(0.1)
        local Character = LocalPlayer.Character
        if not Character then continue end
        
        local egg = LocalPlayer.Backpack:FindFirstChild("Protein Egg")
        if egg then
            egg.Parent = Character
        end
        
        local punch = LocalPlayer.Backpack:FindFirstChild("Punch") or Character:FindFirstChild("Punch")
        if punch then
            if punch.Parent ~= Character then
                punch.Parent = Character
            end
            if LocalPlayer:FindFirstChild("muscleEvent") then
                LocalPlayer.muscleEvent:FireServer("punch", "rightHand")
                LocalPlayer.muscleEvent:FireServer("punch", "leftHand")
            else
                punch:Activate()
            end
        end
    end
end

local function findBetterServer()
    local cursor = nil
    local fallbackServer = nil
    repeat  
        local url = "https://games.roblox.com/v1/games/"..placeId.."/servers/Public?sortOrder=Desc&limit=100"  
        if cursor then  
            url = url.."&cursor="..cursor  
        end  
        local success, response = pcall(function()  
            return HttpService:JSONDecode(game:HttpGet(url))  
        end)  
        if success and response and response.data then  
            for _, server in ipairs(response.data) do  
                local playing = server.playing  
                if playing >= MIN_PLAYERS and playing < server.maxPlayers and server.id ~= game.JobId then  
                    if playing >= PRIORITY_PLAYERS then  
                        return server.id  
                    elseif not fallbackServer then  
                        fallbackServer = server.id  
                    end  
                end  
            end  
            cursor = response.nextPageCursor  
        else  
            break  
        end  
    until not cursor  
    return fallbackServer
end

local function hopToServer()
    task.spawn(function()
        while true do
            local serverId = findBetterServer()
            if serverId then
                local success = pcall(function()
                    TeleportService:TeleportToPlaceInstance(placeId, serverId, LocalPlayer)
                end)
                if success then
                    break
                end
            end
            task.wait(2)
        end
    end)
end

task.spawn(function()
    while getgenv().AutoKillEnabled do
        pcall(attackAllPlayers)
        task.wait(0.08)
    end
end)

task.spawn(autoEquipAndPunch)

task.spawn(function()
    while true do
        task.wait(1)
        if tick() - joinTime >= MAX_TIME_IN_SERVER then
            hopToServer()
            joinTime = tick()
        end
        if #Players:GetPlayers() < MIN_PLAYERS then
            hopToServer()
            joinTime = tick()
        end
    end
end)

local function setupDiedListener(character)
    local hum = character:FindFirstChildOfClass("Humanoid")
    if hum then
        hum.Died:Connect(hopToServer)
    else
        character.ChildAdded:Connect(function(child)
            if child:IsA("Humanoid") then
                child.Died:Connect(hopToServer)
            end
        end)
    end
end

if LocalPlayer.Character then
    setupDiedListener(LocalPlayer.Character)
end
LocalPlayer.CharacterAdded:Connect(setupDiedListener)
