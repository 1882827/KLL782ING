local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local Lighting = game:GetService("Lighting")

local excludedNames = {
    ["Nii_OZ"] = true,
    ["VTBR_VoaPassarinho8"] = true,
}

local placeId = game.PlaceId

local function find18Or19PlayerServer()
    local cursor = nil
    repeat
        local url = "https://games.roblox.com/v1/games/"..placeId.."/servers/Public?sortOrder=Desc&limit=100"
        if cursor then
            url = url.."&cursor="..cursor
        end
        local success, response = pcall(function()
            return HttpService:JSONDecode(game:HttpGet(url))
        end)
        if success and response and response.data then
            for _, server in ipairs(response.data) do
                if (server.playing == 18) and server.maxPlayers == 20 and server.id ~= game.JobId then
                    return server.id
                end
            end
            cursor = response.nextPageCursor
        else
            break
        end
    until not cursor
    return nil
end

local function hopToServer()
    task.spawn(function()
        while true do
            local serverId = find18Or19PlayerServer()
            if serverId then
                local success = pcall(function()
                    TeleportService:TeleportToPlaceInstance(placeId, serverId, LocalPlayer)
                end)
                if success then break end
            end
            task.wait(1)
        end
    end)
end

task.delay(48, hopToServer)

local function setupDiedListener(character)
    local hum = character:FindFirstChildOfClass("Humanoid")
    if hum then
        hum.Died:Connect(hopToServer)
    else
        character.ChildAdded:Connect(function(child)
            if child:IsA("Humanoid") then
                child.Died:Connect(hopToServer)
            end
        end)
    end
end

if LocalPlayer.Character then
    setupDiedListener(LocalPlayer.Character)
end

LocalPlayer.CharacterAdded:Connect(setupDiedListener)

task.spawn(function()
    while true do
        task.wait(2)
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and excludedNames[player.DisplayName] then
                hopToServer()
                return
            end
        end
    end
end)

task.spawn(function()
    while true do
        task.wait(0.3)
        local char = LocalPlayer.Character
        local hum = char and char:FindFirstChildOfClass("Humanoid")
        if hum then
            hum.Health = hum.MaxHealth
        end
    end
end)

task.spawn(function()
    while true do
        task.wait(0.2)
        local root = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        local myDurability = LocalPlayer:FindFirstChild("Durability") and LocalPlayer.Durability.Value
        if root and myDurability then
            for _, player in ipairs(Players:GetPlayers()) do
                if player ~= LocalPlayer 
                    and not excludedNames[player.DisplayName]
                    and player.Character 
                    and player.Character:FindFirstChild("HumanoidRootPart") then
                    local stats = player:FindFirstChild("leaderstats")
                    local strength = stats and stats:FindFirstChild("Strength") and stats.Strength.Value
                    if strength and strength < myDurability * 6.5 then
                        local targetRoot = player.Character.HumanoidRootPart
                        local offset = CFrame.new(math.random(-1,1), math.random(0,2), math.random(-1,1))
                        targetRoot.CFrame = root.CFrame * offset
                    end
                end
            end
        end
    end
end)

task.spawn(function()
    while true do
        task.wait(0.1)
        local Backpack = LocalPlayer:WaitForChild("Backpack")
        local tool = Backpack:FindFirstChild("Punch")
        if tool and LocalPlayer.Character then
            local humanoid = LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
            if humanoid and tool.Parent ~= LocalPlayer.Character then
                humanoid:EquipTool(tool)
            end
        end
    end
end)

task.spawn(function()
    local Backpack = LocalPlayer:WaitForChild("Backpack")
    local tool = Backpack:WaitForChild("Punch")
    repeat task.wait() until LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid")
    local humanoid = LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    humanoid:EquipTool(tool)
    while true do
        task.wait(0.1)
        if tool and tool.Parent == LocalPlayer.Character then
            tool:Activate()
        end
    end
end)

task.spawn(function()
    while true do
        task.wait(0.03)
        local char = LocalPlayer.Character
        local root = char and char:FindFirstChild("HumanoidRootPart")
        if root then
            root.CFrame = root.CFrame * CFrame.Angles(0, math.rad(15), 0)
        end
    end
end)

local function darkenSky()
    for _, v in pairs(Lighting:GetChildren()) do
        if v:IsA("Sky") then
            v:Destroy()
        end
    end
    local darkSky = Instance.new("Sky")
    darkSky.Name = "DarkSky"
    darkSky.SkyboxBk = "rbxassetid://0"
    darkSky.SkyboxDn = "rbxassetid://0"
    darkSky.SkyboxFt = "rbxassetid://0"
    darkSky.SkyboxLf = "rbxassetid://0"
    darkSky.SkyboxRt = "rbxassetid://0"
    darkSky.SkyboxUp = "rbxassetid://0"
    darkSky.Parent = Lighting
    Lighting.Brightness = 0
    Lighting.ClockTime = 0
    Lighting.TimeOfDay = "00:00:00"
    Lighting.OutdoorAmbient = Color3.new(0, 0, 0)
    Lighting.Ambient = Color3.new(0, 0, 0)
    Lighting.FogColor = Color3.new(0, 0, 0)
    Lighting.FogEnd = 100
    task.spawn(function()
        while true do
            task.wait(5)
            if not Lighting:FindFirstChild("DarkSky") then
                darkSky:Clone().Parent = Lighting
            end
            Lighting.Brightness = 0
            Lighting.ClockTime = 0
            Lighting.OutdoorAmbient = Color3.new(0, 0, 0)
            Lighting.Ambient = Color3.new(0, 0, 0)
            Lighting.FogColor = Color3.new(0, 0, 0)
            Lighting.FogEnd = 100
        end
    end)
end

local function removeParticleEffects()
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("ParticleEmitter") then
            obj:Destroy()
        end
    end
end

local function removeLightSources()
    for _, obj in pairs(workspace:GetDescendants()) do
        if obj:IsA("PointLight") or obj:IsA("SpotLight") or obj:IsA("SurfaceLight") then
            obj:Destroy()
        end
    end
end

removeParticleEffects()
removeLightSources()
darkenSky()
