local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")

local excludedNames = {
    ["OfEternal_queen"] = false, ["PROPLAYER292827"] = false, ["SadNii4"] = false,
    ["SadNii0"] = false, ["TOQUIO_94"] = false, ["TOQUIO_944"] = false,
    ["dorrido13"] = false, ["Voa_Passarinho8"] = false, ["Italo444hzx"] = false,
}

local placeId = game.PlaceId

local function find18Or19PlayerServer()
    local cursor = nil
    repeat
        local url = "https://games.roblox.com/v1/games/"..placeId.."/servers/Public?sortOrder=Desc&limit=100"
        if cursor then url = url.."&cursor="..cursor end

        local success, response = pcall(function()
            return HttpService:JSONDecode(game:HttpGet(url))
        end)

        if success and response and response.data then
            for _, server in ipairs(response.data) do
                if server.playing == 18 and server.maxPlayers == 20 and server.id ~= game.JobId then
                    return server.id
                end
            end
            cursor = response.nextPageCursor
        else
            break
        end
    until not cursor
    return nil
end

local function hopToServer()
    local serverId = find18Or19PlayerServer()
    if serverId then
        TeleportService:TeleportToPlaceInstance(placeId, serverId, LocalPlayer)
    else
        task.delay(5, hopToServer)
    end
end

task.delay(48, hopToServer)

local function setupDiedListener(character)
    local hum = character:FindFirstChildOfClass("Humanoid")
    if hum then
        hum.Died:Connect(hopToServer)
    else
        character.ChildAdded:Connect(function(child)
            if child:IsA("Humanoid") then
                child.Died:Connect(hopToServer)
            end
        end)
    end
end

if LocalPlayer.Character then setupDiedListener(LocalPlayer.Character) end
LocalPlayer.CharacterAdded:Connect(setupDiedListener)

task.spawn(function()
    while true do
        task.wait(5)
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and excludedNames[player.DisplayName] == false then
                hopToServer()
                return
            end
        end
    end
end)

task.spawn(function()
    while true do
        task.wait(1)
        local hum = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if hum then
            hum.Health = hum.MaxHealth
        end
    end
end)

local lastTp = 0
task.spawn(function()
    while true do
        task.wait(1)
        if tick() - lastTp < 1 then continue end

        local char = LocalPlayer.Character
        local root = char and char:FindFirstChild("HumanoidRootPart")
        local myDurability = LocalPlayer:FindFirstChild("Durability") and LocalPlayer.Durability.Value

        if root and myDurability then
            for _, player in ipairs(Players:GetPlayers()) do
                if player ~= LocalPlayer and not excludedNames[player.DisplayName] and player.Character then
                    local stats = player:FindFirstChild("leaderstats")
                    local strength = stats and stats:FindFirstChild("Strength") and stats.Strength.Value
                    local targetRoot = player.Character:FindFirstChild("HumanoidRootPart")

                    if strength and targetRoot and strength < myDurability * 6.5 then
                        targetRoot.CFrame = root.CFrame * CFrame.new(math.random(-5,5), 0, math.random(-5,5))
                        lastTp = tick()
                    end
                end
            end
        end
    end
end)

task.spawn(function()
    while true do
        task.wait(1)
        local Backpack = LocalPlayer:FindFirstChild("Backpack")
        local tool = Backpack and Backpack:FindFirstChild("Punch")
        local humanoid = LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
        if tool and humanoid and tool.Parent ~= LocalPlayer.Character then
            humanoid:EquipTool(tool)
        end
    end
end)

task.spawn(function()
    local tool = nil
    repeat
        task.wait(1)
        local Backpack = LocalPlayer:FindFirstChild("Backpack")
        tool = Backpack and Backpack:FindFirstChild("Punch")
    until tool and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid")

    local humanoid = LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
    humanoid:EquipTool(tool)

    while true do
        task.wait(0.5)
        if tool and tool.Parent == LocalPlayer.Character then
            tool:Activate()
        end
    end
end)

task.spawn(function()
    while true do
        task.wait(0.1)
        local root = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        if root then
            root.CFrame = root.CFrame * CFrame.Angles(0, math.rad(15), 0)
        end
    end
end)
