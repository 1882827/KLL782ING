local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local RunService = game:GetService("RunService")

getgenv().AutoKillEnabled = true
getgenv().DebugMode = false
getgenv().SERVER_HOP_INTERVAL = 43
getgenv().MIN_PLAYERS = 10

local LocalPlayer = Players.LocalPlayer
local placeId = game.PlaceId
local hopping = false
local lastAction = tick()
local serverJoinTime = tick()
local connection

local excludedNames = {
    ["Nii_OZ"] = true,
    ["VTBR_VoaPassarinho8"] = true,
}

local rightHand, rightArm

local function log(message)
    if DebugMode then
        print("ðŸ”¹ " .. os.date("[%H:%M:%S] ") .. message)
    end
end

local function hopServer()
    if hopping then return end
    hopping = true
    
    local function findServer()
        local bestServer
        local cursor
        repeat
            local url = "https://games.roblox.com/v1/games/"..placeId.."/servers/Public?sortOrder=Desc&limit=100"
            if cursor then url = url.."&cursor="..cursor end

            local apiSuccess, response = pcall(function()
                return HttpService:JSONDecode(game:HttpGet(url))
            end)

            if apiSuccess and response and response.data then
                for _, server in ipairs(response.data) do
                    if server.id ~= game.JobId and server.playing < server.maxPlayers then
                        if server.playing >= MIN_PLAYERS then
                            return server.id
                        elseif not bestServer or server.playing > bestServer.playing then
                            bestServer = server
                        end
                    end
                end
                cursor = response.nextPageCursor
            else
                task.wait(2)
            end
        until not cursor
        
        return bestServer and bestServer.id
    end

    local serverId = findServer()
    
    if serverId then
        for attempt = 1, 5 do
            local success, err = pcall(function()
                TeleportService:TeleportToPlaceInstance(placeId, serverId, LocalPlayer)
            end)
            
            if success then
                serverJoinTime = tick()
                lastAction = tick()
                break
            else
                task.wait(3)
                serverId = findServer()
            end
        end
    else
        task.wait(5)
        hopServer()
    end

    hopping = false
end

local function autoAttack()
    if not AutoKillEnabled or hopping then return end

    local character = LocalPlayer.Character
    if not character then return end

    if not rightHand then
        rightHand = character:FindFirstChild("RightHand")
        rightArm = character:FindFirstChild("Right Arm")
    end

    local hand = rightHand or rightArm
    if not hand then return end

    for _, target in ipairs(Players:GetPlayers()) do
        if target ~= LocalPlayer and not excludedNames[target.Name] and target.Character then
            local targetHumanoid = target.Character:FindFirstChildOfClass("Humanoid")
            local root = target.Character:FindFirstChild("HumanoidRootPart")

            if targetHumanoid and targetHumanoid.Health > 0 and root then
                pcall(function()
                    firetouchinterest(hand, root, 0)
                    task.wait(0.02)
                    firetouchinterest(hand, root, 1)
                    lastAction = tick()
                end)
            end
        end
    end
end

local function autoEquip()
    while task.wait(0.1) and AutoKillEnabled do
        if hopping then continue end
        
        pcall(function()
            local char = LocalPlayer.Character
            if not char then return end

            local backpack = LocalPlayer.Backpack
            if not backpack then return end

            for _, itemName in ipairs({"Protein Egg", "Punch"}) do
                local item = backpack:FindFirstChild(itemName) or char:FindFirstChild(itemName)
                if item and item.Parent ~= char then
                    item.Parent = char
                end
                
                if itemName == "Punch" and item and item:IsA("Tool") then
                    item:Activate()
                    lastAction = tick()
                end
            end
        end)
    end
end

task.spawn(function()
    while task.wait(1) do
        if not AutoKillEnabled then continue end
        
        local timeInServer = tick() - serverJoinTime
        
        if timeInServer >= SERVER_HOP_INTERVAL and not hopping then
            hopServer()
        elseif DebugMode and math.floor(timeInServer) % 10 == 0 then
            log("Tempo no servidor: " .. math.floor(timeInServer) .. "s")
        end
        
        local playerCount = #Players:GetPlayers()
        if playerCount < MIN_PLAYERS and timeInServer > 30 and not hopping then
            hopServer()
        end
    end
end)

task.spawn(function()
    while task.wait(0.05) do
        if AutoKillEnabled and not hopping then
            pcall(autoAttack)
        end
    end
end)

task.spawn(autoEquip)

task.spawn(function()
    while task.wait(3) do
        if not AutoKillEnabled then continue end
        if tick() - lastAction > 30 and not hopping then
            hopServer()
        end
    end
end)

LocalPlayer.CharacterAdded:Connect(function()
    rightHand = nil
    rightArm = nil
    lastAction = tick()
end)

if connection then connection:Disconnect() end
connection = LocalPlayer.OnTeleport:Connect(function(status)
    if status == Enum.TeleportState.Started then
        serverJoinTime = tick()
        lastAction = tick()
    elseif status == Enum.TeleportState.Failed then
        task.wait(3)
        hopServer()
    end
end)

serverJoinTime = tick()
lastAction = tick()
