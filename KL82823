local Players = game:GetService("Players")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local RunService = game:GetService("RunService")

getgenv().AutoKillEnabled = true
getgenv().DebugMode = true  -- Ative para debug
getgenv().SERVER_HOP_INTERVAL = 43
getgenv().MIN_PLAYERS = 10

local LocalPlayer = Players.LocalPlayer
local placeId = game.PlaceId
local hopping = false
local lastAction = tick()
local serverJoinTime = tick()
local connection

local excludedNames = {
    ["Nii_OZ"] = true,
    ["VTBR_VoaPassarinho8"] = true,
}

local rightHand, rightArm

local function log(message)
    if DebugMode then
        print("游댳 " .. os.date("[%H:%M:%S] ") .. message)
    end
end

local function hopServer()
    if hopping then 
        log("J치 est치 em processo de hopping")
        return 
    end
    hopping = true
    log("Iniciando server hop...")
    
    local function findServer()
        local bestServer
        local cursor
        repeat
            local url = "https://games.roblox.com/v1/games/"..placeId.."/servers/Public?sortOrder=Desc&limit=100"
            if cursor then url = url.."&cursor="..cursor end

            local apiSuccess, response = pcall(function()
                return HttpService:JSONDecode(game:HttpGet(url))
            end)

            if apiSuccess and response and response.data then
                for _, server in ipairs(response.data) do
                    if server.id ~= game.JobId and server.playing < server.maxPlayers then
                        if server.playing >= MIN_PLAYERS then
                            log("Servidor ideal encontrado: " .. server.id)
                            return server.id
                        elseif not bestServer or server.playing > bestServer.playing then
                            bestServer = server
                        end
                    end
                end
                cursor = response.nextPageCursor
            else
                log("Erro na API, tentando novamente...")
                task.wait(2)
            end
        until not cursor
        
        if bestServer then
            log("Usando servidor alternativo: " .. bestServer.id)
            return bestServer.id
        end
        return nil
    end

    local serverId = findServer()
    
    if serverId then
        for attempt = 1, 5 do
            local success, err = pcall(function()
                log("Tentativa " .. attempt .. " de teleporte para: " .. serverId)
                TeleportService:TeleportToPlaceInstance(placeId, serverId, LocalPlayer)
            end)
            
            if success then
                log("Teleporte iniciado com sucesso!")
                serverJoinTime = tick()
                lastAction = tick()
                break
            else
                log("Erro no teleporte: " .. tostring(err))
                task.wait(3)
                serverId = findServer()  -- Busca novo servidor se falhar
                if not serverId then
                    break
                end
            end
        end
    else
        log("Nenhum servidor encontrado, tentando novamente em 5 segundos")
        task.wait(5)
        hopping = false
        hopServer()  -- Reinicia o processo
    end

    hopping = false
end

-- ... (o resto do c칩digo permanece igual at칠 a parte do OnTeleport)

-- CORRE칂츾O DA CONEX츾O OnTeleport
if connection then connection:Disconnect() end
connection = LocalPlayer.OnTeleport:Connect(function(status)
    log("Status do teleporte: " .. tostring(status))
    
    if status == Enum.TeleportState.Started then
        serverJoinTime = tick()
        lastAction = tick()
        log("Teleporte iniciado com sucesso!")
    elseif status == Enum.TeleportState.Failed then
        log("Teleporte falhou, tentando novamente...")
        hopping = false  -- Reseta o estado de hopping
        task.wait(3)
        hopServer()  -- Chama hopServer diretamente
    end
end)

-- Adicione esta fun칞칚o para verificar se o jogador est치 preso
task.spawn(function()
    while task.wait(5) do
        if not AutoKillEnabled then continue end
        
        -- Se n칚o houve a칞칚o nos 칰ltimos 60 segundos e n칚o est치 hopping
        if tick() - lastAction > 60 and not hopping then
            log("Jogador parece estar preso, for칞ando server hop")
            hopServer()
        end
    end
end)

serverJoinTime = tick()
lastAction = tick()
log("Script iniciado com sucesso!")
