local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local RunService = game:GetService("RunService")

getgenv().AutoKillEnabled = true
getgenv().DebugMode = false
getgenv().SERVER_HOP_INTERVAL = 43
getgenv().MIN_PLAYERS = 10

local placeId = game.PlaceId
local hopping = false
local lastAction = tick()
local serverJoinTime = tick()
local connection
local rightHand, rightArm

local excludedNames = {
    ["Nii_OZ"] = true,
    ["VTBR_VoaPassarinho8"] = true,
}

local function find18Or19PlayerServer()
    local cursor = nil
    repeat
        local url = "https://games.roblox.com/v1/games/"..placeId.."/servers/Public?sortOrder=Desc&limit=100"
        if cursor then 
            url = url.."&cursor="..cursor 
        end
        local success, response = pcall(function()
            return HttpService:JSONDecode(game:HttpGet(url))
        end)
        if success and response and response.data then
            for _, server in ipairs(response.data) do
                if (server.playing == 18 or server.playing == 19) and 
                   server.maxPlayers == 20 and 
                   server.id ~= game.JobId then
                    return server.id
                end
            end
            cursor = response.nextPageCursor
        else
            break
        end
    until not cursor
    return nil
end

local function hopToServer()
    if hopping then return end
    hopping = true
    local serverId = find18Or19PlayerServer()
    if serverId then
        local success, err = pcall(function()
            TeleportService:TeleportToPlaceInstance(placeId, serverId, LocalPlayer)
        end)
        if success then
            serverJoinTime = tick()
            lastAction = tick()
            if DebugMode then
                warn("Servidor encontrado! Teleportando...")
            end
        else
            if DebugMode then
                warn("Erro ao teleportar: " .. err)
            end
        end
    else
        if DebugMode then
            warn("Nenhum servidor adequado encontrado.")
        end
    end
    hopping = false
end

local function autoAttack()
    if not AutoKillEnabled or hopping then return end
    local character = LocalPlayer.Character
    if not character then return end
    local humanoid = character:FindFirstChildOfClass("Humanoid")
    if not humanoid or humanoid.Health <= 0 then return end
    if not rightHand then
        rightHand = character:FindFirstChild("RightHand") or character:FindFirstChild("Right Arm")
    end
    local hand = rightHand
    if not hand then return end
    local punchTool = character:FindFirstChild("Punch") or LocalPlayer.Backpack:FindFirstChild("Punch")
    if not punchTool then return end
    if punchTool.Parent ~= character then
        punchTool.Parent = character
        task.wait(0.1)
    end
    for _, target in ipairs(Players:GetPlayers()) do
        if target ~= LocalPlayer and not excludedNames[target.Name] and target.Character then
            local targetHumanoid = target.Character:FindFirstChildOfClass("Humanoid")
            local root = target.Character:FindFirstChild("HumanoidRootPart")
            if targetHumanoid and targetHumanoid.Health > 0 and root then
                local distance = (character.HumanoidRootPart.Position - root.Position).Magnitude
                if distance < 15 then
                    pcall(function()
                        if punchTool:IsA("Tool") then
                            punchTool:Activate()
                        end
                        firetouchinterest(hand, root, 0)
                        task.wait(0.05)
                        firetouchinterest(hand, root, 1)
                        lastAction = tick()
                        if DebugMode then
                            print("Atacando: " .. target.Name)
                        end
                    end)
                end
            end
        end
    end
end

local function autoEquip()
    if hopping then return end
    pcall(function()
        local char = LocalPlayer.Character
        if not char then return end
        local backpack = LocalPlayer.Backpack
        if not backpack then return end
        local punch = backpack:FindFirstChild("Punch")
        if punch and punch:IsA("Tool") then
            punch.Parent = char
        end
        local proteinEgg = backpack:FindFirstChild("Protein Egg")
        if proteinEgg and proteinEgg:IsA("Tool") then
            proteinEgg.Parent = char
        end
    end)
end

local function setupDiedListener(character)
    local hum = character:WaitForChild("Humanoid", 5)
    if hum then
        hum.Died:Connect(function()
            if DebugMode then
                warn("Personagem morreu. Procurando novo servidor...")
            end
            hopToServer()
        end)
    end
end

LocalPlayer.CharacterAdded:Connect(function(character)
    rightHand = nil
    rightArm = nil
    lastAction = tick()
    setupDiedListener(character)
end)

if LocalPlayer.Character then
    setupDiedListener(LocalPlayer.Character)
end

local function checkForExcludedPlayers()
    for _, player in ipairs(Players:GetPlayers()) do
        if excludedNames[player.Name] then
            if DebugMode then
                warn("Jogador excluÃ­do encontrado: " .. player.Name)
            end
            hopToServer()
            return true
        end
    end
    return false
end

local heartbeatConnection
heartbeatConnection = RunService.Heartbeat:Connect(function()
    if not AutoKillEnabled then return end
    if tick() - serverJoinTime >= SERVER_HOP_INTERVAL and not hopping then
        if DebugMode then
            warn("Intervalo de server hop atingido. Procurando novo servidor...")
        end
        hopToServer()
        return
    end
    if tick() - lastAction > 30 and not hopping then
        if DebugMode then
            warn("Inatividade detectada. Procurando novo servidor...")
        end
        hopToServer()
        return
    end
    if checkForExcludedPlayers() then
        return
    end
    autoEquip()
    autoAttack()
end)

if connection then connection:Disconnect() end
connection = LocalPlayer.OnTeleport:Connect(function(status)
    if status == Enum.TeleportState.Started then
        serverJoinTime = tick()
        lastAction = tick()
    elseif status == Enum.TeleportState.Failed then
        if DebugMode then
            warn("Teleporte falhou. Tentando novamente...")
        end
        task.wait(3)
        hopToServer()
    end
end)

serverJoinTime = tick()
lastAction = tick()

if DebugMode then
    warn("Script iniciado com sucesso!")
end
