local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")

local excludedNames = {
    ["Nii_OZ"] = false,
    ["VTBR_VoaPassarinho8"] = false,
}

getgenv().AutoKillEnabled = true
getgenv().DebugMode = false
getgenv().SERVER_HOP_INTERVAL = 43
getgenv().MIN_PLAYERS = 10

local placeId = game.PlaceId
local hopping = false
local lastAction = tick()
local serverJoinTime = tick()
local connection
local rightHand, rightArm

local function find18Or19PlayerServer()
    local cursor = nil
    repeat
        local url = "https://games.roblox.com/v1/games/"..placeId.."/servers/Public?sortOrder=Desc&limit=100"
        if cursor then url = url.."&cursor="..cursor end
        local success, response = pcall(function()
            return HttpService:JSONDecode(game:HttpGet(url))
        end)
        if success and response and response.data then
            for _, server in ipairs(response.data) do
                if (server.playing == 18 or server.playing == 19) and server.maxPlayers == 20 and server.id ~= game.JobId then
                    return server.id
                end
            end
            cursor = response.nextPageCursor
        else
            break
        end
    until not cursor
    return nil
end

local function hopToServer()
    if hopping then return end
    hopping = true
    while true do
        local serverId = find18Or19PlayerServer()
        if serverId then
            local success = pcall(function()
                TeleportService:TeleportToPlaceInstance(placeId, serverId, LocalPlayer)
            end)
            if success then
                serverJoinTime = tick()
                lastAction = tick()
                hopping = false
                return
            else
                task.wait(3)
            end
        else
            task.wait(5)
        end
    end
end

local function autoAttack()
    if not AutoKillEnabled or hopping then return end
    local character = LocalPlayer.Character
    if not character then return end
    if not rightHand then
        rightHand = character:FindFirstChild("RightHand")
        rightArm = character:FindFirstChild("Right Arm")
    end
    local hand = rightHand or rightArm
    if not hand then return end
    for _, target in ipairs(Players:GetPlayers()) do
        if target ~= LocalPlayer and not excludedNames[target.DisplayName] and target.Character then
            local targetHumanoid = target.Character:FindFirstChildOfClass("Humanoid")
            local root = target.Character:FindFirstChild("HumanoidRootPart")
            if targetHumanoid and targetHumanoid.Health > 0 and root then
                pcall(function()
                    firetouchinterest(hand, root, 0)
                    task.wait(0.02)
                    firetouchinterest(hand, root, 1)
                    lastAction = tick()
                end)
            end
        end
    end
end

local function autoEquip()
    while task.wait(0.1) and AutoKillEnabled do
        if hopping then continue end
        pcall(function()
            local char = LocalPlayer.Character
            if not char then return end
            local backpack = LocalPlayer.Backpack
            if not backpack then return end
            for _, itemName in ipairs({"Protein Egg", "Punch"}) do
                local item = backpack:FindFirstChild(itemName) or char:FindFirstChild(itemName)
                if item and item.Parent ~= char then
                    item.Parent = char
                end
                if itemName == "Punch" and item and item:IsA("Tool") then
                    item:Activate()
                    lastAction = tick()
                end
            end
        end)
    end
end

task.spawn(function()
    while true do
        task.wait()
        if not AutoKillEnabled then continue end
        if tick() - serverJoinTime >= SERVER_HOP_INTERVAL and not hopping then
            hopToServer()
        end
    end
end)

task.spawn(function()
    while task.wait(0.05) do
        if AutoKillEnabled and not hopping then
            pcall(autoAttack)
        end
    end
end)

task.spawn(autoEquip)

task.spawn(function()
    while task.wait(3) do
        if not AutoKillEnabled then continue end
        if tick() - lastAction > 30 and not hopping then
            hopToServer()
        end
    end
end)

local function setupDiedListener(character)
    local hum = character:FindFirstChildOfClass("Humanoid")
    if hum then
        hum.Died:Connect(hopToServer)
    else
        character.ChildAdded:Connect(function(child)
            if child:IsA("Humanoid") then
                child.Died:Connect(hopToServer)
            end
        end)
    end
end

if LocalPlayer.Character then
    setupDiedListener(LocalPlayer.Character)
end

LocalPlayer.CharacterAdded:Connect(function(character)
    rightHand = nil
    rightArm = nil
    lastAction = tick()
    setupDiedListener(character)
end)

task.spawn(function()
    while true do
        task.wait(2)
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.DisplayName == "Nii_OZ" then
                hopToServer()
                return
            end
        end
    end
end)

task.spawn(function()
    while true do
        task.wait(0.3)
        local char = LocalPlayer.Character
        local hum = char and char:FindFirstChildOfClass("Humanoid")
        if hum then
            hum.Health = hum.MaxHealth
        end
    end
end)

task.spawn(function()
    while true do
        task.wait(0.1)
        local Backpack = LocalPlayer:WaitForChild("Backpack")
        local tool = Backpack:FindFirstChild("Punch")
        if tool and LocalPlayer.Character then
            local humanoid = LocalPlayer.Character:FindFirstChildOfClass("Humanoid")
            if humanoid and tool.Parent ~= LocalPlayer.Character then
                humanoid:EquipTool(tool)
            end
        end
    end
end)

task.spawn(function()
    while true do
        task.wait(0.1)
        local char = LocalPlayer.Character
        local tool = char and char:FindFirstChild("Punch")
        if tool and tool:IsA("Tool") then
            tool:Activate()
        end
    end
end)

task.spawn(function()
    while true do
        task.wait(0.03)
        local char = LocalPlayer.Character
        local root = char and char:FindFirstChild("HumanoidRootPart")
        if root then
            root.CFrame = root.CFrame * CFrame.Angles(0, math.rad(15), 0)
        end
    end
end)

if connection then connection:Disconnect() end
connection = LocalPlayer.OnTeleport:Connect(function(status)
    if status == Enum.TeleportState.Started then
        serverJoinTime = tick()
        lastAction = tick()
    elseif status == Enum.TeleportState.Failed then
        task.wait(3)
        hopToServer()
    end
end)

serverJoinTime = tick()
lastAction = tick()
