local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")

getgenv().AutoKillEnabled = true
getgenv().DebugMode = false
getgenv().SafeMode = true

local LocalPlayer = Players.LocalPlayer
local placeId = game.PlaceId
local joinTime = tick()
local hopping = false
local teleportAttempts = 0
local lastAction = tick()

local MIN_PLAYERS = 12
local PRIORITY_PLAYERS = 17
local MAX_TIME_IN_SERVER = 45 * 60
local MAX_TELEPORT_ATTEMPTS = 5
local excludedNames = {
    ["Nii_OZ"] = true,
    ["VTBR_VoaPassarinho8"] = true,
}

local function saveLog(message)
    if DebugMode then
        print(os.date("[%H:%M:%S] ") .. message)
    end
end

local function antiAfk()
    local vu = game:GetService("VirtualUser")
    game:GetService("Players").LocalPlayer.Idled:connect(function()
        vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
        wait(1)
        vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
    end)
end

local function resetHoppingState(delay)
    task.wait(delay or 5)
    hopping = false
    teleportAttempts = 0
end

local function getHand()
    local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    return char:FindFirstChild("RightHand") or char:FindFirstChild("Right Arm")
end

local function attackAllPlayers()
    local hand = getHand()
    if not hand or not hand:IsDescendantOf(workspace) then return end
    for _, target in pairs(Players:GetPlayers()) do
        if target ~= LocalPlayer and not excludedNames[target.Name] and target.Character then
            local root = target.Character:FindFirstChild("HumanoidRootPart")
            if root and root:IsDescendantOf(workspace) then
                firetouchinterest(hand, root, 0)
                task.wait(0.05)
                firetouchinterest(hand, root, 1)
            end
        end
    end
end

local function autoEquipAndPunch()
    while task.wait(0.1) do
        local Character = LocalPlayer.Character
        if not Character then continue end
        
        local egg = LocalPlayer.Backpack:FindFirstChild("Protein Egg")
        if egg then
            egg.Parent = Character
        end
        
        local punch = LocalPlayer.Backpack:FindFirstChild("Punch") or Character:FindFirstChild("Punch")
        if punch then
            if punch.Parent ~= Character then
                punch.Parent = Character
            end
            punch:Activate()
        end
    end
end

local function findBetterServer()
    local cursor = nil
    local bestServer = nil
    
    repeat  
        local url = "https://games.roblox.com/v1/games/"..placeId.."/servers/Public?sortOrder=Desc&limit=100"  
        if cursor then url = url.."&cursor="..cursor end  
        
        local success, response = pcall(function()  
            return HttpService:JSONDecode(game:HttpGet(url))  
        end)  
        
        if success and response and response.data then  
            for _, server in ipairs(response.data) do  
                if server.playing >= MIN_PLAYERS and server.playing < server.maxPlayers and server.id ~= game.JobId then  
                    if server.playing >= PRIORITY_PLAYERS then  
                        return server.id
                    elseif not bestServer or server.playing > bestServer.playing then
                        bestServer = server
                    end
                end  
            end  
            cursor = response.nextPageCursor  
        else  
            break  
        end  
    until not cursor  
    
    return bestServer and bestServer.id
end

local function hopToServer()
    if hopping then return end
    hopping = true
    teleportAttempts = teleportAttempts + 1
    
    if teleportAttempts > MAX_TELEPORT_ATTEMPTS then
        saveLog("Max teleport attempts reached")
        resetHoppingState(60)
        return
    end
    
    local serverId = findBetterServer()
    if serverId then
        saveLog("Teleporting to: "..serverId)
        local success = pcall(function()
            TeleportService:TeleportToPlaceInstance(placeId, serverId, LocalPlayer)
        end)
        
        if not success then
            resetHoppingState(5)
            if AutoKillEnabled then hopToServer() end
        end
    else
        resetHoppingState(30)
    end
end

local function checkInactivity()
    while task.wait(10) do
        if tick() - lastAction > 300 then
            hopToServer()
        end
    end
end

LocalPlayer.CharacterAdded:Connect(function(character)
    character:WaitForChild("Humanoid").Died:Connect(hopToServer)
end)

task.spawn(function()
    while AutoKillEnabled do
        pcall(attackAllPlayers)
        task.wait(0.1)
    end
end)

task.spawn(autoEquipAndPunch)
task.spawn(antiAfk)
task.spawn(checkInactivity)

task.spawn(function()
    while task.wait(5) do
        if tick() - joinTime >= MAX_TIME_IN_SERVER then
            joinTime = tick()
            hopToServer()
        end
        
        if #Players:GetPlayers() < MIN_PLAYERS then
            hopToServer()
        end
    end
end)

RunService.Heartbeat:Connect(function()
    lastAction = tick()
end)
